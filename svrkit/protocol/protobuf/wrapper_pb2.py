# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: wrapper.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='wrapper.proto',
  package='svrkit',
  syntax='proto2',
  serialized_pb=_b('\n\rwrapper.proto\x12\x06svrkit\"\xbc\x01\n\x0eRequestWrapper\x12\x0c\n\x04\x61rgs\x18\x01 \x03(\x0c\x12\x32\n\x06kwargs\x18\x02 \x03(\x0b\x32\".svrkit.RequestWrapper.KwargsEntry\x1a\x14\n\x03\x41rg\x12\r\n\x05value\x18\x01 \x01(\x0c\x1a#\n\x05Kwarg\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\r\n\x05value\x18\x02 \x01(\x0c\x1a-\n\x0bKwargsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\",\n\x0fResponseWrapper\x12\x0b\n\x03RET\x18\x01 \x01(\r\x12\x0c\n\x04\x44\x41TA\x18\x02 \x01(\x0c')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_REQUESTWRAPPER_ARG = _descriptor.Descriptor(
  name='Arg',
  full_name='svrkit.RequestWrapper.Arg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='svrkit.RequestWrapper.Arg.value', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=130,
)

_REQUESTWRAPPER_KWARG = _descriptor.Descriptor(
  name='Kwarg',
  full_name='svrkit.RequestWrapper.Kwarg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='svrkit.RequestWrapper.Kwarg.key', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='svrkit.RequestWrapper.Kwarg.value', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=132,
  serialized_end=167,
)

_REQUESTWRAPPER_KWARGSENTRY = _descriptor.Descriptor(
  name='KwargsEntry',
  full_name='svrkit.RequestWrapper.KwargsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='svrkit.RequestWrapper.KwargsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='svrkit.RequestWrapper.KwargsEntry.value', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=169,
  serialized_end=214,
)

_REQUESTWRAPPER = _descriptor.Descriptor(
  name='RequestWrapper',
  full_name='svrkit.RequestWrapper',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='args', full_name='svrkit.RequestWrapper.args', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kwargs', full_name='svrkit.RequestWrapper.kwargs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_REQUESTWRAPPER_ARG, _REQUESTWRAPPER_KWARG, _REQUESTWRAPPER_KWARGSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=214,
)


_RESPONSEWRAPPER = _descriptor.Descriptor(
  name='ResponseWrapper',
  full_name='svrkit.ResponseWrapper',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='RET', full_name='svrkit.ResponseWrapper.RET', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DATA', full_name='svrkit.ResponseWrapper.DATA', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=216,
  serialized_end=260,
)

_REQUESTWRAPPER_ARG.containing_type = _REQUESTWRAPPER
_REQUESTWRAPPER_KWARG.containing_type = _REQUESTWRAPPER
_REQUESTWRAPPER_KWARGSENTRY.containing_type = _REQUESTWRAPPER
_REQUESTWRAPPER.fields_by_name['kwargs'].message_type = _REQUESTWRAPPER_KWARGSENTRY
DESCRIPTOR.message_types_by_name['RequestWrapper'] = _REQUESTWRAPPER
DESCRIPTOR.message_types_by_name['ResponseWrapper'] = _RESPONSEWRAPPER

RequestWrapper = _reflection.GeneratedProtocolMessageType('RequestWrapper', (_message.Message,), dict(

  Arg = _reflection.GeneratedProtocolMessageType('Arg', (_message.Message,), dict(
    DESCRIPTOR = _REQUESTWRAPPER_ARG,
    __module__ = 'wrapper_pb2'
    # @@protoc_insertion_point(class_scope:svrkit.RequestWrapper.Arg)
    ))
  ,

  Kwarg = _reflection.GeneratedProtocolMessageType('Kwarg', (_message.Message,), dict(
    DESCRIPTOR = _REQUESTWRAPPER_KWARG,
    __module__ = 'wrapper_pb2'
    # @@protoc_insertion_point(class_scope:svrkit.RequestWrapper.Kwarg)
    ))
  ,

  KwargsEntry = _reflection.GeneratedProtocolMessageType('KwargsEntry', (_message.Message,), dict(
    DESCRIPTOR = _REQUESTWRAPPER_KWARGSENTRY,
    __module__ = 'wrapper_pb2'
    # @@protoc_insertion_point(class_scope:svrkit.RequestWrapper.KwargsEntry)
    ))
  ,
  DESCRIPTOR = _REQUESTWRAPPER,
  __module__ = 'wrapper_pb2'
  # @@protoc_insertion_point(class_scope:svrkit.RequestWrapper)
  ))
_sym_db.RegisterMessage(RequestWrapper)
_sym_db.RegisterMessage(RequestWrapper.Arg)
_sym_db.RegisterMessage(RequestWrapper.Kwarg)
_sym_db.RegisterMessage(RequestWrapper.KwargsEntry)

ResponseWrapper = _reflection.GeneratedProtocolMessageType('ResponseWrapper', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSEWRAPPER,
  __module__ = 'wrapper_pb2'
  # @@protoc_insertion_point(class_scope:svrkit.ResponseWrapper)
  ))
_sym_db.RegisterMessage(ResponseWrapper)


_REQUESTWRAPPER_KWARGSENTRY.has_options = True
_REQUESTWRAPPER_KWARGSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
